AWSTemplateFormatVersion: 2010-09-09
Description: Template to launch an Ubuntu Linux instance running Apache.
Parameters:
  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
    Description: Only default t2.micro will be allowed
  KeyName:
    Type: String
    Default: generic-cloud-wk
    Description: >-
      Enter the key pair name that you want associated with this instance. Note:
      Name is required
  AnsibleRepository:
    Type: String
    Default: 'https://github.com/moffzilla/AWS-Fundamentals'
    Description: The git repository of Ansible playbooks
  AnsiblePlaybook:
    Type: String
    Default: CloudFormation/CF_Apache_CAS.yaml
    Description: The Ansible playbook to use
Mappings:
  AWSAMIRegionMap:
    AMI:
      UB1604HVMSSD: ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server
    us-east-1:
      UB1604HVMSSD: ami-1d4e7a66
    us-west-1:
      UB1604HVMSSD: ami-4d6a852e
Resources:
  Ec2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !FindInMap 
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - UB1604HVMSSD
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref WebSecurityGroup
      UserData:  
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt-get install -y ansible git
          echo "localhost ansible_connection=local" > /etc/ansible/hosts
          sudo sh -c 'sed -i -e 's/#log_path/log_path/g' /etc/ansible/ansible.cfg'
          sudo ansible-pull -U  ${AnsibleRepository} ${AnsiblePlaybook}                            
  NewVolume:
    Type: 'AWS::EC2::Volume'
    Properties:
      Size: '1'
      AvailabilityZone: !GetAtt 
        - Ec2Instance
        - AvailabilityZone
  MountPoint:
    Type: 'AWS::EC2::VolumeAttachment'
    Properties:
      InstanceId: !Ref Ec2Instance
      VolumeId: !Ref NewVolume
      Device: /dev/sdh
  WebSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable tcp access for Web and SSH traffic from outside
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: 0.0.0.0/0
Outputs:
  InstanceId:
    Description: Instance ID of the Web Server
    Value: !Ref Ec2Instance
  AZ:
    Description: 'Instances is running in Availability Zone '
    Value: !GetAtt 
      - Ec2Instance
      - AvailabilityZone
  PublicIP:
    Description: Public IP
    Value: !GetAtt 
      - Ec2Instance
      - PublicIp
  PublicDNS:
    Description: Instance Public DNS Name
    Value: !GetAtt 
      - Ec2Instance
      - PublicDnsName
